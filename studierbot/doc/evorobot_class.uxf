<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="13.3">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>270</y>
      <w>145</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>/SocketCANObserver/
--
-canid_t _canid
--
+SocketCANObserver()
+~SocketCANObserver()
+void setCANId(id: canid_t)
+canid_t getCANId()
/+void notify(struct can_frame* frame) /</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>715</y>
      <w>210</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>SocketCAN
--
- std::thread* _thread
- std::vector&lt;SocketCANObserver*&gt; _observers
--
+SocketCAN(std::string devFile)
+~SocketCAN()
+bool registerObserver(SocketCANObserver* observer)
+bool openPort(const char* port)
+bool send(struct can_frame* frame)
+bool startListener()
+bool stopListener()
+bool closePort()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>650</y>
      <w>15</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>230</x>
      <y>380</y>
      <w>365</w>
      <h>275</h>
    </coordinates>
    <panel_attributes>MotorcontrollerCAN
--
--
+MotorControllerCAN(SocketCAN* can, unsigned int canID, MotorParams params, bool verbosity=0)
+~MotorControllerCAN()
+bool enable()
+bool disable()
+bool broadcastExternalSync()
+bool configureResponse(enum CanResponse mode)
+unsigned short getCanId()
+bool setTimeout(unsigned short timeoutInMillis)
+unsigned short getTimeout()
+float getGearRatio()
+bool setEncoderTicksPerRev(float encoderTicksPerRev)
+float getEncoderTicksPerRev()
+bool setFrequencyScale(unsigned short scale)
+unsigned short getFrequencyScale()
+bool setMaxPulseWidth(unsigned char pulse)
+unsigned char getMaxPulseWidth()
+bool setPWM(int pwm[2])
+bool setRPM(float rpm[2])
+void getWheelResponse(float response[2])
+bool setKp(float kp)
+float getKp()
+bool setKi(float ki)
+float getKi()
+bool setKd(float kd)
+float getKd()
+bool setAntiWindup(bool activate)
+bool getAntiWindup()
+bool setInputWeight(float weight)
+float getInputWeight()
+bool waitForSync(unsigned int timeoutInMillis=100)
+void stop()
-void notify(struct can_frame* frame)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>335</y>
      <w>15</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>335</y>
      <w>25</w>
      <h>390</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..*
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;760.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>635</x>
      <y>395</y>
      <w>280</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>AddonShieldCAN
--
--
+AddonShieldCAN(SocketCAN* can, bool verbosity=0)
+~AddonShieldCAN()
+bool enable(unsigned char channel)
+bool disable(unsigned char channel)
+float getVoltage()
+bool setThreshold(unsigned char channel, float threshold)
+bool setPWMFrequency(unsigned char channel, unsigned short frequency)
+bool setPulseWidth(unsigned char channel, unsigned char pwm)
+bool enable12V()
+bool disable12V()
+bool enable19V()
+bool disable19V()
+bool waitForSync(unsigned int timeoutInMillis=100)
-void notify(struct can_frame* frame)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>645</x>
      <y>335</y>
      <w>15</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>675</x>
      <y>525</y>
      <w>45</w>
      <h>245</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>70.0;10.0;70.0;460.0;10.0;460.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>175</x>
      <y>145</y>
      <w>370</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>MechanumSteering
--
--
+MechanumSteering(ChassisParams &amp;chassisParams, MotorParams &amp;motorParams, SocketCAN &amp;can)
+~MechanumSteering()
+void run()
-void joyCallback(const sensor_msgs::Joy::ConstPtr&amp; joy)
-void velocityCallback(const geometry_msgs::Twist::ConstPtr&amp; cmd)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>315</x>
      <y>200</y>
      <w>15</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=2</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;360.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>555</x>
      <y>145</y>
      <w>345</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>SkidSteering
--
--
+SkidSteering(ChassisParams &amp;chassisParams, MotorParams &amp;motorParams, SocketCAN &amp;can)
+~SkidSteering()
+void run()
-void joyCallback(const sensor_msgs::Joy::ConstPtr&amp; joy)
-void velocityCallback(const geometry_msgs::Twist::ConstPtr&amp; cmd)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>200</y>
      <w>20</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=3</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;360.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>745</x>
      <y>290</y>
      <w>160</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>*Abstract CAN message observer class*
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>495</x>
      <y>200</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>515</x>
      <y>200</y>
      <w>50</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>275</x>
      <y>750</y>
      <w>155</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>*Interface to CAN layer*
- Message polling loop runs in own thread
- Notifies CAN listener with specific ID
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>425</x>
      <y>760</y>
      <w>55</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>445</x>
      <y>235</y>
      <w>105</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>*Chassis-specific classes*
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>295</y>
      <w>35</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>230</x>
      <y>685</y>
      <w>125</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>*Interface to Motor controller*
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>285</x>
      <y>650</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>760</x>
      <y>565</y>
      <w>125</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>*Interface to DCDC converter*
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>810</x>
      <y>525</y>
      <w>15</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
